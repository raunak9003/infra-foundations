---
imagePullSecrets:
  - name: releaseregcred
  - name: testregcred
  - name: remoteregcred
# Number of replicas to run of the issuer
replicaCount: 2

# Pod security context
# +docs:property
podSecurityContext:
  runAsUser: 65532
image:
  repository: prekarilabs-docker-release.jfrog.io/aws-pca-issuer
  pullPolicy: IfNotPresent
  tag: ""

# Disable waiting for CertificateRequests to be Approved before signing
disableApprovedCheck: false

# Disables Kubernetes client-side rate limiting (only use if API Priority & Fairness is enabled on the cluster).
disableClientSideRateLimiting: false

# Override the name of the objects created by this chart
nameOverride: ""

# Override the name of the objects created by this chart
fullnameOverride: ""

# Number deployment revisions to keep
revisionHistoryLimit: 10

# Container security context
# +docs:property
securityContext:
  allowPrivilegeEscalation: false

hpa:
  enabled: true
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

cloud:
  accountId: ''
  region: ""
  aws:
    iamRoleNameForSA: "aws-privateca-issuer"
  provider: aws

issuer:
  certificateAuthorityId: ''
  name: cert-manager-aws-root-ca
rbac:
  create: true

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

service:
  enabled: true
  type: ClusterIP
  port: 8080

# Annotations to add to the issuer Pod
podAnnotations: {}


# Kubernetes pod resources requests/limits
# +docsproperty
resources:
  limits:
    cpu: 50m
    memory: 64Mi
  requests:
    cpu: 50m
    memory: 64Mi

# Kubernetes node selector: node labels for pod assignment
nodeSelector: {}

# Kubernetes pod tolerations for cert-manager-csi-driver
#
# For example:
#  tolerations:
#  - operator: "Exists"
tolerations: []

affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
                - linux
            - key: kubernetes.io/arch
              operator: In
              values:
                - amd64
                - arm64
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - aws-privateca-issuer
          topologyKey: kubernetes.io/hostname
        weight: 100

# List of Kubernetes TopologySpreadConstraints
# +docs:property
topologySpreadConstraints:
  - maxSkew: 1
    topologyKey: topology.kubernetes.io/zone
    whenUnsatisfiable: ScheduleAnyway
    labelSelector:
      matchLabels:
        app.kubernetes.io/name: aws-privateca-issuer

# Priority class name for the issuer pods
# If specified, this will set the priority class on pods, which can influence scheduling decisions
#
# For example:
#   priorityClassName: high-priority
priorityClassName: ""


# Additional environment variables to set in the Pod
# +docs:type=object
env:


# Additional labels to add to the Pod
podLabels: {}

# Additional volumes on the operator container.
volumes: []

# Additional VolumeMounts on the operator container.
volumeMounts: []

# Extra containers to add to the pod spec in the deployment.
extraContainers: []

# Configures a disruption budget for the deployment.
#
# structure similar https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.24/#poddisruptionbudgetspec-v1-policy
# WITHOUT the pod selector, which is handled by the chart.
# Per https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.24/#poddisruptionbudgetspec-v1-policy
# exclusive with `minAvailable`, you cannot set both.
#
# For example:
#   podDisruptionBudget:
#     maxUnavailable: 1
#
# Or:
#   podDisruptionBudget:
#     minAvailable: 1
#
# But NOT:
#   podDisruptionBudget:
#     minAvailable: 1
#     maxUnavailable: 1
pdb:
  maxUnavailable: 1
  enabled: true

autoscaling:
  # Enable auto scaling using a HorizontalPodAutoscaler
  enabled: false
  # Minimum number of replicas to deploy
  minReplicas: 1
  # Maximum number of replicas to deploy
  maxReplicas: 100
  # CPU threshold to scale at as a percentage of the requested CPUs
  targetCPUUtilizationPercentage: 80
  # Memory threshold to scale at as a percentage of the requested memory
  # +docs:property
  # targetMemoryUtilizationPercentage: 80

approverRole:
  # Create the ClusterRole to allow the issuer to approve certificate requests
  enabled: true
  # Service account give approval permission
  serviceAccountName: cert-manager
  # Namespace the service account resides in
  namespace: cert-manager

# +docs:section=Monitoring

serviceMonitor:
  # Create Prometheus ServiceMonitor
  create: false
  # Annotations to add to the Prometheus ServiceMonitor
  annotations: {}
  # Labels to add to the Prometheus ServiceMonitor
  labels: {}
